#version 430 core

layout(local_size_x = 32) in;

layout(std430, binding = 1) writeonly restrict buffer starsComputeData {
	vec3 starData[];
};

uniform uint numStarsUI;
uniform float initRandom;

float getrand() {
	uint x = floatBitsToUint(gl_GlobalInvocationID.x);
	x ^= x * 87983473u;
	const uint max = 0x7FFFFFFF;
	return float(x & max) / float(max);
}

void main() {
	const float i = getrand();
	const float theta = 3.883222077 * i * float(numStarsUI) * initRandom;
	const float y = 1.0 - i * 2.0;
	const float radius = sqrt(1.0 - y * y);
	starData[gl_GlobalInvocationID.x] = vec3(cos(theta) * radius, y, sin(theta) * radius);
}
